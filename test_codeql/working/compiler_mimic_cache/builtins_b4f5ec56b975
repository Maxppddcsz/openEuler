__atomic_add_fetch_1(vV*,U,i)U
__atomic_add_fetch_16(vV*,T,i)T
__atomic_add_fetch_2(vV*,S,i)S
__atomic_add_fetch_4(vV*,I,i)I
__atomic_add_fetch_8(vV*,L,i)L
__atomic_and_fetch_1(vV*,U,i)U
__atomic_and_fetch_16(vV*,T,i)T
__atomic_and_fetch_2(vV*,S,i)S
__atomic_and_fetch_4(vV*,I,i)I
__atomic_and_fetch_8(vV*,L,i)L
__atomic_compare_exchange(L,vV*,v*,v*,b,i,i)b
__atomic_compare_exchange_1(vV*,v*,U,b,i,i)b
__atomic_compare_exchange_16(vV*,v*,T,b,i,i)b
__atomic_compare_exchange_2(vV*,v*,S,b,i,i)b
__atomic_compare_exchange_4(vV*,v*,I,b,i,i)b
__atomic_compare_exchange_8(vV*,v*,L,b,i,i)b
__atomic_exchange(L,vV*,v*,v*,i)v
__atomic_exchange_1(vV*,U,i)U
__atomic_exchange_16(vV*,T,i)T
__atomic_exchange_2(vV*,S,i)S
__atomic_exchange_4(vV*,I,i)I
__atomic_exchange_8(vV*,L,i)L
__atomic_fetch_add_1(vV*,U,i)U
__atomic_fetch_add_16(vV*,T,i)T
__atomic_fetch_add_2(vV*,S,i)S
__atomic_fetch_add_4(vV*,I,i)I
__atomic_fetch_add_8(vV*,L,i)L
__atomic_fetch_and_1(vV*,U,i)U
__atomic_fetch_and_16(vV*,T,i)T
__atomic_fetch_and_2(vV*,S,i)S
__atomic_fetch_and_4(vV*,I,i)I
__atomic_fetch_and_8(vV*,L,i)L
__atomic_fetch_nand_1(vV*,U,i)U
__atomic_fetch_nand_16(vV*,T,i)T
__atomic_fetch_nand_2(vV*,S,i)S
__atomic_fetch_nand_4(vV*,I,i)I
__atomic_fetch_nand_8(vV*,L,i)L
__atomic_fetch_or_1(vV*,U,i)U
__atomic_fetch_or_16(vV*,T,i)T
__atomic_fetch_or_2(vV*,S,i)S
__atomic_fetch_or_4(vV*,I,i)I
__atomic_fetch_or_8(vV*,L,i)L
__atomic_fetch_sub_1(vV*,U,i)U
__atomic_fetch_sub_16(vV*,T,i)T
__atomic_fetch_sub_2(vV*,S,i)S
__atomic_fetch_sub_4(vV*,I,i)I
__atomic_fetch_sub_8(vV*,L,i)L
__atomic_fetch_xor_1(vV*,U,i)U
__atomic_fetch_xor_16(vV*,T,i)T
__atomic_fetch_xor_2(vV*,S,i)S
__atomic_fetch_xor_4(vV*,I,i)I
__atomic_fetch_xor_8(vV*,L,i)L
__atomic_load(L,vCV*,v*,i)v
__atomic_load_1(vCV*,i)U
__atomic_load_16(vCV*,i)T
__atomic_load_2(vCV*,i)S
__atomic_load_4(vCV*,i)I
__atomic_load_8(vCV*,i)L
__atomic_nand_fetch_1(vV*,U,i)U
__atomic_nand_fetch_16(vV*,T,i)T
__atomic_nand_fetch_2(vV*,S,i)S
__atomic_nand_fetch_4(vV*,I,i)I
__atomic_nand_fetch_8(vV*,L,i)L
__atomic_or_fetch_1(vV*,U,i)U
__atomic_or_fetch_16(vV*,T,i)T
__atomic_or_fetch_2(vV*,S,i)S
__atomic_or_fetch_4(vV*,I,i)I
__atomic_or_fetch_8(vV*,L,i)L
__atomic_store(L,vCV*,v*,i)v
__atomic_store_1(vV*,U,i)v
__atomic_store_16(vV*,T,i)v
__atomic_store_2(vV*,S,i)v
__atomic_store_4(vV*,I,i)v
__atomic_store_8(vV*,L,i)v
__atomic_sub_fetch_1(vV*,U,i)U
__atomic_sub_fetch_16(vV*,T,i)T
__atomic_sub_fetch_2(vV*,S,i)S
__atomic_sub_fetch_4(vV*,I,i)I
__atomic_sub_fetch_8(vV*,L,i)L
__atomic_xor_fetch_1(vV*,U,i)U
__atomic_xor_fetch_16(vV*,T,i)T
__atomic_xor_fetch_2(vV*,S,i)S
__atomic_xor_fetch_4(vV*,I,i)I
__atomic_xor_fetch_8(vV*,L,i)L
__bswapdi2(o)o
__bswapsi2(i)i
__builtin__Exit(i)vX
__builtin___bnd_chk_ptr_bounds(vC*,L)v
__builtin___bnd_chk_ptr_lbounds(vC*)v
__builtin___bnd_chk_ptr_ubounds(vC*)v
__builtin___bnd_copy_ptr_bounds(vC*,vC*)v*
__builtin___bnd_get_ptr_lbound(vC*)vC*
__builtin___bnd_get_ptr_ubound(vC*)vC*
__builtin___bnd_init_ptr_bounds(vC*)v*
__builtin___bnd_narrow_ptr_bounds(vC*,vC*,L)v*
__builtin___bnd_null_ptr_bounds(vC*)v*
__builtin___bnd_set_ptr_bounds(vC*,L)v*
__builtin___bnd_store_ptr_bounds(v**,vC*)v
__builtin___clear_cache(v*,v*)v
__builtin___fprintf_chk(v*,i,uC*,?)i
__builtin___memcpy_chk(v*,vC*,L,L)v*
__builtin___memmove_chk(v*,vC*,L,L)v*
__builtin___mempcpy_chk(v*,vC*,L,L)v*
__builtin___memset_chk(v*,i,L,L)v*
__builtin___printf_chk(i,uC*,?)i
__builtin___snprintf_chk(u*,L,i,L,uC*,?)i
__builtin___sprintf_chk(u*,i,L,uC*,?)i
__builtin___stpcpy_chk(u*,uC*,L)u*
__builtin___stpncpy_chk(u*,uC*,L,L)u*
__builtin___strcat_chk(u*,uC*,L)u*
__builtin___strcpy_chk(u*,uC*,L)u*
__builtin___strncat_chk(u*,uC*,L,L)u*
__builtin___strncpy_chk(u*,uC*,L,L)u*
__builtin___vfprintf_chk(v*,i,uC*,a*)i
__builtin___vprintf_chk(i,uC*,a*)i
__builtin___vsnprintf_chk(u*,L,i,L,uC*,a*)i
__builtin___vsprintf_chk(u*,i,L,uC*,a*)i
__builtin__exit(i)vX
__builtin_abort(?)vX
__builtin_abs(i)i
__builtin_acc_on_device(i)i
__builtin_acos(d)d
__builtin_acosf(f)f
__builtin_acosh(d)d
__builtin_acoshf(f)f
__builtin_acoshl(e)e
__builtin_acosl(e)e
__builtin_adjust_descriptor(v*)v*
__builtin_adjust_trampoline(v*)v*
__builtin_aligned_alloc(L,L)v*
__builtin_alloca(L)v*
__builtin_alloca_with_align(L,L)v*
__builtin_asin(d)d
__builtin_asinf(f)f
__builtin_asinh(d)d
__builtin_asinhf(f)f
__builtin_asinhl(e)e
__builtin_asinl(e)e
__builtin_atan(d)d
__builtin_atan2(d,d)d
__builtin_atan2f(f,f)f
__builtin_atan2l(e,e)e
__builtin_atanf(f)f
__builtin_atanh(d)d
__builtin_atanhf(f)f
__builtin_atanhl(e)e
__builtin_atanl(e)e
__builtin_bcmp(vC*,vC*,L)i
__builtin_bcopy(vC*,v*,L)v
__builtin_bzero(v*,L)v
__builtin_cabs(D)d
__builtin_cabsf(F)f
__builtin_cabsl(E)e
__builtin_cacos(D)D
__builtin_cacosf(F)F
__builtin_cacosh(D)D
__builtin_cacoshf(F)F
__builtin_cacoshl(E)E
__builtin_cacosl(E)E
__builtin_calloc(L,L)v*
__builtin_carg(D)d
__builtin_cargf(F)f
__builtin_cargl(E)e
__builtin_casin(D)D
__builtin_casinf(F)F
__builtin_casinh(D)D
__builtin_casinhf(F)F
__builtin_casinhl(E)E
__builtin_casinl(E)E
__builtin_catan(D)D
__builtin_catanf(F)F
__builtin_catanh(D)D
__builtin_catanhf(F)F
__builtin_catanhl(E)E
__builtin_catanl(E)E
__builtin_cbrt(d)d
__builtin_cbrtf(f)f
__builtin_cbrtl(e)e
__builtin_ccos(D)D
__builtin_ccosf(F)F
__builtin_ccosh(D)D
__builtin_ccoshf(F)F
__builtin_ccoshl(E)E
__builtin_ccosl(E)E
__builtin_ceil(d)d
__builtin_ceilf(f)f
__builtin_ceill(e)e
__builtin_cexp(D)D
__builtin_cexpf(F)F
__builtin_cexpl(E)E
__builtin_chkp_memcpy_nobnd(v*,vC*,L)v*
__builtin_chkp_memcpy_nobnd_nochk(v*,vC*,L)v*
__builtin_chkp_memcpy_nochk(v*,vC*,L)v*
__builtin_chkp_memmove_nobnd(v*,vC*,L)v*
__builtin_chkp_memmove_nobnd_nochk(v*,vC*,L)v*
__builtin_chkp_memmove_nochk(v*,vC*,L)v*
__builtin_chkp_mempcpy_nobnd(v*,vC*,L)v*
__builtin_chkp_mempcpy_nobnd_nochk(v*,vC*,L)v*
__builtin_chkp_mempcpy_nochk(v*,vC*,L)v*
__builtin_chkp_memset_nobnd(v*,i,L)v*
__builtin_chkp_memset_nobnd_nochk(v*,i,L)v*
__builtin_chkp_memset_nochk(v*,i,L)v*
__builtin_choose_expr()i
__builtin_cimag(D)d
__builtin_cimagf(F)f
__builtin_cimagl(E)e
__builtin_clog(D)D
__builtin_clog10(D)D
__builtin_clog10f(F)F
__builtin_clog10l(E)E
__builtin_clogf(F)F
__builtin_clogl(E)E
__builtin_conj(D)D
__builtin_conjf(F)F
__builtin_conjl(E)E
__builtin_copysign(d,d)d
__builtin_copysignf(f,f)f
__builtin_copysignl(e,e)e
__builtin_copysignq(?)!
__builtin_cos(d)d
__builtin_cosf(f)f
__builtin_cosh(d)d
__builtin_coshf(f)f
__builtin_coshl(e)e
__builtin_cosl(e)e
__builtin_cpow(D,D)D
__builtin_cpowf(F,F)F
__builtin_cpowl(E,E)E
__builtin_cproj(D)D
__builtin_cprojf(F)F
__builtin_cprojl(E)E
__builtin_creal(D)d
__builtin_crealf(F)f
__builtin_creall(E)e
__builtin_csin(D)D
__builtin_csinf(F)F
__builtin_csinh(D)D
__builtin_csinhf(F)F
__builtin_csinhl(E)E
__builtin_csinl(E)E
__builtin_csqrt(D)D
__builtin_csqrtf(F)F
__builtin_csqrtl(E)E
__builtin_ctan(D)D
__builtin_ctanf(F)F
__builtin_ctanh(D)D
__builtin_ctanhf(F)F
__builtin_ctanhl(E)E
__builtin_ctanl(E)E
__builtin_dcgettext(uC*,uC*,i)u*
__builtin_dgettext(uC*,uC*)u*
__builtin_drem(d,d)d
__builtin_dremf(f,f)f
__builtin_dreml(e,e)e
__builtin_eh_copy_values(i,i)v
__builtin_eh_filter(i)l
__builtin_eh_pointer(i)v*
__builtin_erf(d)d
__builtin_erfc(d)d
__builtin_erfcf(f)f
__builtin_erfcl(e)e
__builtin_erff(f)f
__builtin_erfl(e)e
__builtin_execl(uC*,uC*,?)i
__builtin_execle(uC*,uC*,?)i
__builtin_execlp(uC*,uC*,?)i
__builtin_execv(uC*,u*C*)i
__builtin_execve(uC*,u*C*,u*C*)i
__builtin_execvp(uC*,u*C*)i
__builtin_exit(i)vX
__builtin_exp(d)d
__builtin_exp10(d)d
__builtin_exp10f(f)f
__builtin_exp10l(e)e
__builtin_exp2(d)d
__builtin_exp2f(f)f
__builtin_exp2l(e)e
__builtin_expf(f)f
__builtin_expl(e)e
__builtin_expm1(d)d
__builtin_expm1f(f)f
__builtin_expm1l(e)e
__builtin_fabs(d)d
__builtin_fabsf(f)f
__builtin_fabsl(e)e
__builtin_fabsq(?)!
__builtin_fdim(d,d)d
__builtin_fdimf(f,f)f
__builtin_fdiml(e,e)e
__builtin_ffs(i)i
__builtin_ffsimax(l)i
__builtin_ffsl(l)i
__builtin_ffsll(o)i
__builtin_finite(d)i
__builtin_finited128(f:D128)i
__builtin_finited32(f:D32)i
__builtin_finited64(f:D64)i
__builtin_finitef(f)i
__builtin_finitel(e)i
__builtin_floor(d)d
__builtin_floorf(f)f
__builtin_floorl(e)e
__builtin_fma(d,d,d)d
__builtin_fmaf(f,f,f)f
__builtin_fmal(e,e,e)e
__builtin_fmax(d,d)d
__builtin_fmaxf(f,f)f
__builtin_fmaxl(e,e)e
__builtin_fmin(d,d)d
__builtin_fminf(f,f)f
__builtin_fminl(e,e)e
__builtin_fmod(d,d)d
__builtin_fmodf(f,f)f
__builtin_fmodl(e,e)e
__builtin_fork(?)i
__builtin_fprintf(v*,uC*,?)i
__builtin_fprintf_unlocked(v*,uC*,?)i
__builtin_fputc(i,v*)i
__builtin_fputc_unlocked(i,v*)i
__builtin_fputs(uC*,v*)i
__builtin_fputs_unlocked(uC*,v*)i
__builtin_free(v*)v
__builtin_frexp(d,i*)d
__builtin_frexpf(f,i*)f
__builtin_frexpl(e,i*)e
__builtin_fscanf(v*,uC*,?)i
__builtin_fwrite(vC*,L,L,v*)L
__builtin_fwrite_unlocked(vC*,L,L,v*)L
__builtin_gamma(d)d
__builtin_gamma_r(d,i*)d
__builtin_gammaf(f)f
__builtin_gammaf_r(f,i*)f
__builtin_gammal(e)e
__builtin_gammal_r(e,i*)e
__builtin_gettext(uC*)u*
__builtin_hypot(d,d)d
__builtin_hypotf(f,f)f
__builtin_hypotl(e,e)e
__builtin_ilogb(d)i
__builtin_ilogbf(f)i
__builtin_ilogbl(e)i
__builtin_imaxabs(l)l
__builtin_index(uC*,i)u*
__builtin_init_descriptor(v*,v*,v*)v
__builtin_init_heap_trampoline(v*,v*,v*)v
__builtin_init_trampoline(v*,v*,v*)v
__builtin_isalnum(i)i
__builtin_isalpha(i)i
__builtin_isascii(i)i
__builtin_isblank(i)i
__builtin_iscntrl(i)i
__builtin_isdigit(i)i
__builtin_isgraph(i)i
__builtin_isinf(?)i
__builtin_isinfd128(f:D128)i
__builtin_isinfd32(f:D32)i
__builtin_isinfd64(f:D64)i
__builtin_isinff(f)i
__builtin_isinfl(e)i
__builtin_islower(i)i
__builtin_isnan(?)i
__builtin_isnand128(f:D128)i
__builtin_isnand32(f:D32)i
__builtin_isnand64(f:D64)i
__builtin_isnanf(f)i
__builtin_isnanl(e)i
__builtin_isprint(i)i
__builtin_ispunct(i)i
__builtin_isspace(i)i
__builtin_isupper(i)i
__builtin_iswalnum(I)i
__builtin_iswalpha(I)i
__builtin_iswblank(I)i
__builtin_iswcntrl(I)i
__builtin_iswdigit(I)i
__builtin_iswgraph(I)i
__builtin_iswlower(I)i
__builtin_iswprint(I)i
__builtin_iswpunct(I)i
__builtin_iswspace(I)i
__builtin_iswupper(I)i
__builtin_iswxdigit(I)i
__builtin_isxdigit(i)i
__builtin_j0(d)d
__builtin_j0f(f)f
__builtin_j0l(e)e
__builtin_j1(d)d
__builtin_j1f(f)f
__builtin_j1l(e)e
__builtin_jn(i,d)d
__builtin_jnf(i,f)f
__builtin_jnl(i,e)e
__builtin_labs(l)l
__builtin_ldexp(d,i)d
__builtin_ldexpf(f,i)f
__builtin_ldexpl(e,i)e
__builtin_lgamma(d)d
__builtin_lgamma_r(d,i*)d
__builtin_lgammaf(f)f
__builtin_lgammaf_r(f,i*)f
__builtin_lgammal(e)e
__builtin_lgammal_r(e,i*)e
__builtin_llabs(o)o
__builtin_llrint(d)o
__builtin_llrintf(f)o
__builtin_llrintl(e)o
__builtin_llround(d)o
__builtin_llroundf(f)o
__builtin_llroundl(e)o
__builtin_log(d)d
__builtin_log10(d)d
__builtin_log10f(f)f
__builtin_log10l(e)e
__builtin_log1p(d)d
__builtin_log1pf(f)f
__builtin_log1pl(e)e
__builtin_log2(d)d
__builtin_log2f(f)f
__builtin_log2l(e)e
__builtin_logb(d)d
__builtin_logbf(f)f
__builtin_logbl(e)e
__builtin_logf(f)f
__builtin_logl(e)e
__builtin_lrint(d)l
__builtin_lrintf(f)l
__builtin_lrintl(e)l
__builtin_lround(d)l
__builtin_lroundf(f)l
__builtin_lroundl(e)l
__builtin_malloc(L)v*
__builtin_memchr(vC*,i,L)v*
__builtin_memcmp(vC*,vC*,L)i
__builtin_memcmp_eq(vC*,vC*,L)i
__builtin_memcpy(v*,vC*,L)v*
__builtin_memmove(v*,vC*,L)v*
__builtin_mempcpy(v*,vC*,L)v*
__builtin_memset(v*,i,L)v*
__builtin_modf(d,d*)d
__builtin_modff(f,f*)f
__builtin_modfl(e,e*)e
__builtin_ms_va_copy(a*,a*)v
__builtin_ms_va_end(a*)v
__builtin_ms_va_start(a*,?)v
__builtin_nan(uC*)d
__builtin_nanf(uC*)f
__builtin_nanl(uC*)e
__builtin_nanq(?)!
__builtin_nansq(?)!
__builtin_nearbyint(d)d
__builtin_nearbyintf(f)f
__builtin_nearbyintl(e)e
__builtin_nextafter(d,d)d
__builtin_nextafterf(f,f)f
__builtin_nextafterl(e,e)e
__builtin_nexttoward(d,e)d
__builtin_nexttowardf(f,e)f
__builtin_nexttowardl(e,e)e
__builtin_nonlocal_goto(v*,v*)vX
__builtin_posix_memalign(v**,L,L)i
__builtin_pow(d,d)d
__builtin_pow10(d)d
__builtin_pow10f(f)f
__builtin_pow10l(e)e
__builtin_powf(f,f)f
__builtin_powl(e,e)e
__builtin_printf(uC*,?)i
__builtin_printf_unlocked(uC*,?)i
__builtin_putc(i,v*)i
__builtin_putc_unlocked(i,v*)i
__builtin_putchar(i)i
__builtin_putchar_unlocked(i)i
__builtin_puts(uC*)i
__builtin_puts_unlocked(uC*)i
__builtin_realloc(v*,L)v*
__builtin_remainder(d,d)d
__builtin_remainderf(f,f)f
__builtin_remainderl(e,e)e
__builtin_remquo(d,d,i*)d
__builtin_remquof(f,f,i*)f
__builtin_remquol(e,e,i*)e
__builtin_rindex(uC*,i)u*
__builtin_rint(d)d
__builtin_rintf(f)f
__builtin_rintl(e)e
__builtin_round(d)d
__builtin_roundf(f)f
__builtin_roundl(e)e
__builtin_scalb(d,d)d
__builtin_scalbf(f,f)f
__builtin_scalbl(e,e)e
__builtin_scalbln(d,l)d
__builtin_scalblnf(f,l)f
__builtin_scalblnl(e,l)e
__builtin_scalbn(d,i)d
__builtin_scalbnf(f,i)f
__builtin_scalbnl(e,i)e
__builtin_scanf(uC*,?)i
__builtin_setjmp_receiver(v*)v
__builtin_setjmp_setup(v*,v*)v
__builtin_signbit(?)i
__builtin_signbitd128(f:D128)i
__builtin_signbitd32(f:D32)i
__builtin_signbitd64(f:D64)i
__builtin_signbitf(f)i
__builtin_signbitl(e)i
__builtin_significand(d)d
__builtin_significandf(f)f
__builtin_significandl(e)e
__builtin_sin(d)d
__builtin_sincos(d,d*,d*)v
__builtin_sincosf(f,f*,f*)v
__builtin_sincosl(e,e*,e*)v
__builtin_sinf(f)f
__builtin_sinh(d)d
__builtin_sinhf(f)f
__builtin_sinhl(e)e
__builtin_sinl(e)e
__builtin_snprintf(u*,L,uC*,?)i
__builtin_sprintf(u*,uC*,?)i
__builtin_sqrt(d)d
__builtin_sqrtf(f)f
__builtin_sqrtl(e)e
__builtin_sscanf(uC*,uC*,?)i
__builtin_stack_restore(v*)v
__builtin_stack_save(?)v*
__builtin_stpcpy(u*,uC*)u*
__builtin_stpncpy(u*,uC*,L)u*
__builtin_strcasecmp(uC*,uC*)i
__builtin_strcat(u*,uC*)u*
__builtin_strchr(uC*,i)u*
__builtin_strcmp(uC*,uC*)i
__builtin_strcpy(u*,uC*)u*
__builtin_strcspn(uC*,uC*)L
__builtin_strdup(uC*)u*
__builtin_strfmon(u*,L,uC*,?)l
__builtin_strftime(u*,L,uC*,vC*)L
__builtin_strlen(uC*)L
__builtin_strncasecmp(uC*,uC*,L)i
__builtin_strncat(u*,uC*,L)u*
__builtin_strncmp(uC*,uC*,L)i
__builtin_strncpy(u*,uC*,L)u*
__builtin_strndup(uC*,L)u*
__builtin_strpbrk(uC*,uC*)u*
__builtin_strrchr(uC*,i)u*
__builtin_strspn(uC*,uC*)L
__builtin_strstr(uC*,uC*)u*
__builtin_tan(d)d
__builtin_tanf(f)f
__builtin_tanh(d)d
__builtin_tanhf(f)f
__builtin_tanhl(e)e
__builtin_tanl(e)e
__builtin_tgamma(d)d
__builtin_tgammaf(f)f
__builtin_tgammal(e)e
__builtin_toascii(i)i
__builtin_tolower(i)i
__builtin_toupper(i)i
__builtin_towlower(I)I
__builtin_towupper(I)I
__builtin_trunc(d)d
__builtin_truncf(f)f
__builtin_truncl(e)e
__builtin_unwind_resume(v*)vX
__builtin_va_arg()v
__builtin_va_copy(a*,a*)v
__builtin_va_end(a*)v
__builtin_va_start(a*,?)v
__builtin_vfprintf(v*,uC*,a*)i
__builtin_vfscanf(v*,uC*,a*)i
__builtin_vprintf(uC*,a*)i
__builtin_vscanf(uC*,a*)i
__builtin_vsnprintf(u*,L,uC*,a*)i
__builtin_vsprintf(u*,uC*,a*)i
__builtin_vsscanf(uC*,uC*,a*)i
__builtin_y0(d)d
__builtin_y0f(f)f
__builtin_y0l(e)e
__builtin_y1(d)d
__builtin_y1f(f)f
__builtin_y1l(e)e
__builtin_yn(i,d)d
__builtin_ynf(i,f)f
__builtin_ynl(i,e)e
__copysigntf3(q,q)q
__divdc3(d,d,d,d)D
__divsc3(f,f,f,f)F
__divtc3(?)!
__divxc3(e,e,e,e)E
__fabstf2(q)q
__muldc3(d,d,d,d)D
__mulsc3(f,f,f,f)F
__multc3(?)!
__mulxc3(e,e,e,e)E
__sync_add_and_fetch(?)v
__sync_add_and_fetch_1(vV*,U)U
__sync_add_and_fetch_16(vV*,T)T
__sync_add_and_fetch_2(vV*,S)S
__sync_add_and_fetch_4(vV*,I)I
__sync_add_and_fetch_8(vV*,L)L
__sync_and_and_fetch(?)v
__sync_and_and_fetch_1(vV*,U)U
__sync_and_and_fetch_16(vV*,T)T
__sync_and_and_fetch_2(vV*,S)S
__sync_and_and_fetch_4(vV*,I)I
__sync_and_and_fetch_8(vV*,L)L
__sync_bool_compare_and_swap(?)v
__sync_bool_compare_and_swap_1(vV*,U,U)b
__sync_bool_compare_and_swap_16(vV*,T,T)b
__sync_bool_compare_and_swap_2(vV*,S,S)b
__sync_bool_compare_and_swap_4(vV*,I,I)b
__sync_bool_compare_and_swap_8(vV*,L,L)b
__sync_fetch_and_add(?)v
__sync_fetch_and_add_1(vV*,U)U
__sync_fetch_and_add_16(vV*,T)T
__sync_fetch_and_add_2(vV*,S)S
__sync_fetch_and_add_4(vV*,I)I
__sync_fetch_and_add_8(vV*,L)L
__sync_fetch_and_and(?)v
__sync_fetch_and_and_1(vV*,U)U
__sync_fetch_and_and_16(vV*,T)T
__sync_fetch_and_and_2(vV*,S)S
__sync_fetch_and_and_4(vV*,I)I
__sync_fetch_and_and_8(vV*,L)L
__sync_fetch_and_or(?)v
__sync_fetch_and_or_1(vV*,U)U
__sync_fetch_and_or_16(vV*,T)T
__sync_fetch_and_or_2(vV*,S)S
__sync_fetch_and_or_4(vV*,I)I
__sync_fetch_and_or_8(vV*,L)L
__sync_fetch_and_sub(?)v
__sync_fetch_and_sub_1(vV*,U)U
__sync_fetch_and_sub_16(vV*,T)T
__sync_fetch_and_sub_2(vV*,S)S
__sync_fetch_and_sub_4(vV*,I)I
__sync_fetch_and_sub_8(vV*,L)L
__sync_fetch_and_xor(?)v
__sync_fetch_and_xor_1(vV*,U)U
__sync_fetch_and_xor_16(vV*,T)T
__sync_fetch_and_xor_2(vV*,S)S
__sync_fetch_and_xor_4(vV*,I)I
__sync_fetch_and_xor_8(vV*,L)L
__sync_lock_release(?)v
__sync_lock_release_1(vV*)v
__sync_lock_release_16(vV*)v
__sync_lock_release_2(vV*)v
__sync_lock_release_4(vV*)v
__sync_lock_release_8(vV*)v
__sync_lock_test_and_set(?)v
__sync_lock_test_and_set_1(vV*,U)U
__sync_lock_test_and_set_16(vV*,T)T
__sync_lock_test_and_set_2(vV*,S)S
__sync_lock_test_and_set_4(vV*,I)I
__sync_lock_test_and_set_8(vV*,L)L
__sync_or_and_fetch(?)v
__sync_or_and_fetch_1(vV*,U)U
__sync_or_and_fetch_16(vV*,T)T
__sync_or_and_fetch_2(vV*,S)S
__sync_or_and_fetch_4(vV*,I)I
__sync_or_and_fetch_8(vV*,L)L
__sync_sub_and_fetch(?)v
__sync_sub_and_fetch_1(vV*,U)U
__sync_sub_and_fetch_16(vV*,T)T
__sync_sub_and_fetch_2(vV*,S)S
__sync_sub_and_fetch_4(vV*,I)I
__sync_sub_and_fetch_8(vV*,L)L
__sync_val_compare_and_swap(?)v
__sync_val_compare_and_swap_1(vV*,U,U)U
__sync_val_compare_and_swap_16(vV*,T,T)T
__sync_val_compare_and_swap_2(vV*,S,S)S
__sync_val_compare_and_swap_4(vV*,I,I)I
__sync_val_compare_and_swap_8(vV*,L,L)L
__sync_xor_and_fetch(?)v
__sync_xor_and_fetch_1(vV*,U)U
__sync_xor_and_fetch_16(vV*,T)T
__sync_xor_and_fetch_2(vV*,S)S
__sync_xor_and_fetch_4(vV*,I)I
__sync_xor_and_fetch_8(vV*,L)L
