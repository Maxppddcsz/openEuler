# SPDX-License-Identifier: GPL-2.0-only
config HAVE_LIVEPATCH_FTRACE
	bool
	help
	  Arch supports kernel live patching based on ftrace

config HAVE_LIVEPATCH_WO_FTRACE
	bool
	help
	  Arch supports kernel live patching without ftrace

menu "Enable Livepatch"

config LIVEPATCH
	bool "Kernel Live Patching"
	depends on (HAVE_LIVEPATCH_FTRACE && (DYNAMIC_FTRACE_WITH_REGS || DYNAMIC_FTRACE_WITH_ARGS)) || HAVE_LIVEPATCH_WO_FTRACE
	depends on MODULES
	depends on SYSFS
	depends on KALLSYMS_ALL
	depends on !TRIM_UNUSED_KSYMS
	help
	  Say Y here if you want to support kernel live patching.
	  This option has no runtime impact until a kernel "patch"
	  module uses the interface provided by this option to register
	  a patch, causing calls to patched functions to be redirected
	  to new function code contained in the patch module.

choice
	prompt "live patching method"
	depends on LIVEPATCH
	help
	  Live patching implementation method configuration.
	  Choose an interested live patching solution which will
	  allow calls to patched functions to be redirected to new
	  function code contained in the patch module.

config LIVEPATCH_FTRACE
	bool "based on ftrace"
	depends on HAVE_LIVEPATCH_FTRACE
	help
	  Supports kernel live patching based on ftrace.
	  This is the original implementation of kernel live
	  patching which is just renamed to distinguish from
	  another live patching solution.

config LIVEPATCH_WO_FTRACE
	bool "without ftrace"
	depends on HAVE_LIVEPATCH_WO_FTRACE
	help
	  Supports kernel live patching without ftrace.
	  This solution will patch the first few instructions
	  of a function so that caller of it will jump to
	  another expected function.
	  Note that this patching solution would not handle conflict
	  with other patching technologies (i.e. ftrace, kprobe),
	  please avoid acting them on the same function!

endchoice

endmenu
